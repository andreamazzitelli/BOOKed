version: '3'

services:
    couchdb:
        image: couchdb
        environment:
            - COUCHDB_USER=admin
            - COUCHDB_PASSWORD=admin
        ports:
            - 5984:5984
        volumes: 
            - ./docker/couchdb/data:/opt/couchdb/data
        restart: on-failure

    rabbitmq:
        image: rabbitmq:3
        hostname: my-rabbit
        ports:
            - 5672:5672
        restart: unless-stopped

    consumer:
        build: ./consumer
        environment:
            - NODE_ENV=production
        volumes:
            - ./share_folder:/usr/src/app/share_folder
        depends_on:
            - "rabbitmq"
        command: "./wait-for-it.sh -t 60 rabbitmq:5672 -- node consumer.js"
        restart: unless-stopped

    web_server:
        image: nginx:1.13.8
        ports:
            - 8080:80
            - 443:443
        volumes:
            - ./nginx:/srv/www/api
            - ./docker/nginx/openssl:/cert
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app_server
            - mysql
            - php
        restart: on-failure

    php:
        build:
            context: ./docker/php
        ports:
            - 9000:9000
        volumes:
            - ./nginx:/srv/www/api
            - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
        environment:
            MYSQL_USER: user
            MYSQL_PASSWORD: password
        restart: on-failure

    app_server:
        build: ./server
        environment:
            - NODE_ENV=production
        volumes:
            - ./share_folder:/usr/src/app/share_folder:ro
        ports:
            - 3000:3000
        depends_on:
            - couchdb
            - consumer
        command:  "./wait-for-it.sh -t 60 couchdb:5984 -- bash -c  './initialize.sh && node server.js'"
        restart: on-failure
        
    mysql:
        image: mysql
        environment:
            - MYSQL_USER=user
            - MYSQL_PASSWORD=password
            - MYSQL_ROOT_PASSWORD=root
        ports:
            - 3400:3306
        volumes:
            - ./docker/mysql:/docker-entrypoint-initdb.d
        restart: on-failure
    
